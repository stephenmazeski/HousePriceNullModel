test <- Stat_380_test
head(train)
head(test)
set.seed(1234)
train <- train[sample(1:nrow(train)), ]
head(train)
sub_train <- train %>% select(LotFrontage,LotArea,OverallQual,OverallCond,FullBath,HalfBath,TotRmsAbvGrd, YearBuilt, TotalBsmtSF, BedroomAbvGr, GrLivArea, PoolArea, YrSold, SalePrice)
sub_test<-test %>% select(LotFrontage,LotArea,OverallQual,OverallCond,FullBath,HalfBath,TotRmsAbvGrd, YearBuilt, TotalBsmtSF, BedroomAbvGr, GrLivArea, PoolArea, YrSold)
sub_test$SalePrice<-0
y.train<-sub_train$SalePrice
y.test<-sub_test$SalePrice
dummies <- dummyVars(SalePrice~ ., data = sub_train)
x.train<-predict(dummies, newdata = sub_train)
x.test<-predict(dummies, newdata = sub_test)
dtrain <- xgb.DMatrix(x.train,label=y.train,missing=NA)
dtest <- xgb.DMatrix(x.test,label=y.test,missing=NA)
param <- list(  objective           = "binary:hinge",
gamma               =1.65,
booster             = "gbtree",
eval_metric         = "rmse",
eta                 =.15,
max_depth           = 3,
subsample           = 0.90,
colsample_bytree    = 0.90,
tree_method = 'hist'
)
XGBm<-xgb.cv( params=param,nfold=9,nrounds=73,missing=NA,data=dtrain,print_every_n=1)
watchlist <- list(eval = dtest, train = dtrain)
#now fit the full model
XGBm<-xgb.train( params=param,nrounds=73,missing=NA,data=dtrain,watchlist,early_stop_round=20,print_every_n=1)
pred<-predict(XGBm, newdata = dtest)
example$SalePrice<-pred
param <- list(  objective           = "binary:hinge",
gamma               =1.65,
booster             = "gblinear",
eval_metric         = "rmse",
eta                 =.15,
max_depth           = 3,
subsample           = 0.90,
colsample_bytree    = 0.90,
#tree_method = 'hist'
)
param <- list(  #objective           = "binary:hinge",
gamma               =1.65,
booster             = "gblinear",
eval_metric         = "rmse",
eta                 =.15,
max_depth           = 3,
subsample           = 0.90,
colsample_bytree    = 0.90,
#tree_method = 'hist'
)
param <- list(
booster             = "gblinear",
eval_metric         = "rmse",
#tree_method = 'hist'
)
param <- list(
booster             = "gblinear",
eval_metric         = "rmse"
)
XGBm<-xgb.cv( params=param,nfold=9,nrounds=73,missing=NA,data=dtrain,print_every_n=1)
watchlist <- list(eval = dtest, train = dtrain)
#now fit the full model
XGBm<-xgb.train( params=param,nrounds=73,missing=NA,data=dtrain,watchlist,early_stop_round=20,print_every_n=1)
pred<-predict(XGBm, newdata = dtest)
example$SalePrice<-pred
library(tidyverse)
library(Metrics)
library(data.table)
library(xgboost)
library(caret)
train <- Stat_380_train
test <- Stat_380_test
head(train)
head(test)
#set.seed(1234)
#train <- train[sample(1:nrow(train)), ]
#head(train)
sub_train <- train %>% select(LotFrontage,LotArea,OverallQual,OverallCond,FullBath,HalfBath,TotRmsAbvGrd, YearBuilt, TotalBsmtSF, BedroomAbvGr, GrLivArea, PoolArea, YrSold, SalePrice)
sub_test<-test %>% select(LotFrontage,LotArea,OverallQual,OverallCond,FullBath,HalfBath,TotRmsAbvGrd, YearBuilt, TotalBsmtSF, BedroomAbvGr, GrLivArea, PoolArea, YrSold)
sub_test$SalePrice<-0
y.train<-sub_train$SalePrice
y.test<-sub_test$SalePrice
dummies <- dummyVars(SalePrice~ ., data = sub_train)
x.train<-predict(dummies, newdata = sub_train)
x.test<-predict(dummies, newdata = sub_test)
dtrain <- xgb.DMatrix(x.train,label=y.train,missing=NA)
dtest <- xgb.DMatrix(x.test,label=y.test,missing=NA)
param <- list(
booster             = "gblinear",
eval_metric         = "rmse"
)
XGBm<-xgb.cv( params=param,nfold=9,nrounds=73,missing=NA,data=dtrain,print_every_n=1)
watchlist <- list(eval = dtest, train = dtrain)
#now fit the full model
XGBm<-xgb.train( params=param,nrounds=73,missing=NA,data=dtrain,watchlist,early_stop_round=20,print_every_n=1)
pred<-predict(XGBm, newdata = dtest)
example$SalePrice<-pred
watchlist <- list(eval = dtest, train = dtrain)
#now fit the full model
XGBm<-xgb.train( params=param,nrounds=73,missing=NA,data=dtrain,watchlist,early_stop_round=20,print_every_n=1)
pred<-predict(XGBm, newdata = dtest)
example$SalePrice<-pred
pred
install.packages("shiny")
f<-pred
example$SalePrice<-f
str(pred)
#example$SalePrice<-f
str(pred)
#example$SalePrice<-f
test1<- list(pred)
as.data.frame(test1)
#example$SalePrice<-f
test1<- list(pred)
as.data.frame(test1)
library(tidyverse)
library(Metrics)
library(data.table)
library(xgboost)
library(caret)
train <- Stat_380_train
test <- Stat_380_test
head(train)
head(test)
#set.seed(1234)
#train <- train[sample(1:nrow(train)), ]
#head(train)
sub_train <- train %>% select(LotFrontage,LotArea,OverallQual,OverallCond,FullBath,HalfBath,TotRmsAbvGrd, YearBuilt, TotalBsmtSF, BedroomAbvGr, GrLivArea, PoolArea, YrSold, SalePrice)
sub_test<-test %>% select(LotFrontage,LotArea,OverallQual,OverallCond,FullBath,HalfBath,TotRmsAbvGrd, YearBuilt, TotalBsmtSF, BedroomAbvGr, GrLivArea, PoolArea, YrSold)
sub_test$SalePrice<-0
y.train<-sub_train$SalePrice
y.test<-sub_test$SalePrice
dummies <- dummyVars(SalePrice~ ., data = sub_train)
x.train<-predict(dummies, newdata = sub_train)
x.test<-predict(dummies, newdata = sub_test)
dtrain <- xgb.DMatrix(x.train,label=y.train,missing=NA)
dtest <- xgb.DMatrix(x.test,label=y.test,missing=NA)
param <- list(
booster             = "gblinear",
eval_metric         = "rmse"
)
XGBm<-xgb.cv( params=param,nfold=9,nrounds=73,missing=NA,data=dtrain,print_every_n=1)
watchlist <- list(eval = dtest, train = dtrain)
#now fit the full model
XGBm<-xgb.train( params=param,nrounds=73,missing=NA,data=dtrain,watchlist,early_stop_round=20,print_every_n=1)
pred<-predict(XGBm, newdata = dtest)
#example$SalePrice<-f
test1<- list(pred)
as.data.frame(test1)
colnames(test1) <- c("Id", "SalePrice")
#example$SalePrice<-f
test1<- list(pred)
as.data.frame(test1, row.names = c("Id", "SalePrice"))
#example$SalePrice<-f
test1<- list(pred)
as.data.frame(test1, col.names = c("Id", "SalePrice"))
library(tidyverse)
library(Metrics)
library(data.table)
library(xgboost)
library(caret)
train <- Stat_380_train
test <- Stat_380_test
head(train)
head(test)
#set.seed(1234)
#train <- train[sample(1:nrow(train)), ]
#head(train)
sub_train <- train %>% select(LotFrontage,LotArea,OverallQual,OverallCond,FullBath,HalfBath,TotRmsAbvGrd, YearBuilt, TotalBsmtSF, BedroomAbvGr, GrLivArea, PoolArea, YrSold, SalePrice)
sub_test<-test %>% select(LotFrontage,LotArea,OverallQual,OverallCond,FullBath,HalfBath,TotRmsAbvGrd, YearBuilt, TotalBsmtSF, BedroomAbvGr, GrLivArea, PoolArea, YrSold)
sub_test$SalePrice<-0
y.train<-sub_train$SalePrice
y.test<-sub_test$SalePrice
dummies <- dummyVars(SalePrice~ ., data = sub_train)
x.train<-predict(dummies, newdata = sub_train)
x.test<-predict(dummies, newdata = sub_test)
dtrain <- xgb.DMatrix(x.train,label=y.train,missing=NA)
dtest <- xgb.DMatrix(x.test,label=y.test,missing=NA)
param <- list(
booster             = "gblinear",
eval_metric         = "rmse"
)
XGBm<-xgb.cv( params=param,nfold=9,nrounds=73,missing=NA,data=dtrain,print_every_n=1)
watchlist <- list(eval = dtest, train = dtrain)
#now fit the full model
XGBm<-xgb.train( params=param,nrounds=73,missing=NA,data=dtrain,watchlist,early_stop_round=20,print_every_n=1)
pred<-predict(XGBm, newdata = dtest)
#example$SalePrice<-f
test1<- list(pred)
as.data.frame(test1, col.names = "SalePrice")
fwrite(test1,'380AssignmentOne.csv')
#example$SalePrice<-f
test1<- list(pred)
as.data.frame(test1, col.names = "SalePrice")
test1$Id< seq.int(nrow(test1))
fwrite(test1,'380AssignmentOne.csv')
fwrite(test1,'380AssignmentOne1.csv')
library(tidyverse)
library(Metrics)
library(data.table)
library(xgboost)
library(caret)
train <- Stat_380_train
test <- Stat_380_test
head(train)
head(test)
#set.seed(1234)
#train <- train[sample(1:nrow(train)), ]
#head(train)
sub_train <- train %>% select(LotFrontage,LotArea,OverallQual,OverallCond,FullBath,HalfBath,TotRmsAbvGrd, YearBuilt, TotalBsmtSF, BedroomAbvGr, GrLivArea, PoolArea, YrSold, SalePrice)
sub_test<-test %>% select(LotFrontage,LotArea,OverallQual,OverallCond,FullBath,HalfBath,TotRmsAbvGrd, YearBuilt, TotalBsmtSF, BedroomAbvGr, GrLivArea, PoolArea, YrSold)
sub_test$SalePrice<-0
y.train<-sub_train$SalePrice
y.test<-sub_test$SalePrice
dummies <- dummyVars(SalePrice~ ., data = sub_train)
x.train<-predict(dummies, newdata = sub_train)
x.test<-predict(dummies, newdata = sub_test)
dtrain <- xgb.DMatrix(x.train,label=y.train,missing=NA)
dtest <- xgb.DMatrix(x.test,label=y.test,missing=NA)
param <- list(
booster             = "gblinear",
eval_metric         = "rmse"
)
XGBm<-xgb.cv( params=param,nfold=9,nrounds=73,missing=NA,data=dtrain,print_every_n=1)
watchlist <- list(eval = dtest, train = dtrain)
#now fit the full model
XGBm<-xgb.train( params=param,nrounds=150,missing=NA,data=dtrain,watchlist,early_stop_round=20,print_every_n=1)
pred<-predict(XGBm, newdata = dtest)
param <- list(
booster             = "gblinear",
eval_metric         = "rmse"
)
XGBm<-xgb.cv( params=param,nfold=9,nrounds=150,missing=NA,data=dtrain,print_every_n=1)
watchlist <- list(eval = dtest, train = dtrain)
#now fit the full model
XGBm<-xgb.train( params=param,nrounds=150,missing=NA,data=dtrain,watchlist,early_stop_round=20,print_every_n=1)
pred<-predict(XGBm, newdata = dtest)
#example$SalePrice<-f
test1<- list(pred)
as.data.frame(test1, col.names = "SalePrice")
test1$Id< seq.int(nrow(test1))
fwrite(test1,'380AssignmentOne1.csv')
library(tidyverse)
library(Metrics)
library(data.table)
library(xgboost)
library(caret)
train <- Stat_380_train
test <- Stat_380_test
head(train)
head(test)
#set.seed(1234)
#train <- train[sample(1:nrow(train)), ]
#head(train)
sub_train <- train %>% select(LotFrontage,LotArea,OverallQual,OverallCond,FullBath,HalfBath,TotRmsAbvGrd, YearBuilt, TotalBsmtSF, BedroomAbvGr, GrLivArea, PoolArea, YrSold, SalePrice)
sub_test<-test %>% select(LotFrontage,LotArea,OverallQual,OverallCond,FullBath,HalfBath,TotRmsAbvGrd, YearBuilt, TotalBsmtSF, BedroomAbvGr, GrLivArea, PoolArea, YrSold)
sub_test$SalePrice<-0
y.train<-sub_train$SalePrice
y.test<-sub_test$SalePrice
dummies <- dummyVars(SalePrice~ ., data = sub_train)
x.train<-predict(dummies, newdata = sub_train)
x.test<-predict(dummies, newdata = sub_test)
dtrain <- xgb.DMatrix(x.train,label=y.train,missing=NA)
dtest <- xgb.DMatrix(x.test,label=y.test,missing=NA)
param <- list(
booster             = "gblinear",
eval_metric         = "rmse"
)
XGBm<-xgb.cv( params=param,nfold=9,nrounds=150,missing=NA,data=dtrain,print_every_n=1)
watchlist <- list(eval = dtest, train = dtrain)
#now fit the full model
XGBm<-xgb.train( params=param,nrounds=150,missing=NA,data=dtrain,watchlist,early_stop_round=20,print_every_n=1)
pred<-predict(XGBm, newdata = dtest)
#example$SalePrice<-f
test1<- list(pred)
as.data.frame(test1, col.names = "SalePrice")
test1$Id< seq.int(nrow(test1))
fwrite(test1,'380AssignmentOne1.csv')
summary(pred)
param <- list(
booster             = "gblinear",
eval_metric         = "rmse"
)
XGBm<-xgb.cv( params=param,nfold=15,nrounds=150,missing=NA,data=dtrain,print_every_n=1)
param <- list(
booster             = "gblinear",
eval_metric         = "rmse"
)
XGBm<-xgb.cv( params=param,nfold=9,nrounds=150,missing=NA,data=dtrain,print_every_n=1)
library(tidyverse)
library(Metrics)
library(data.table)
library(xgboost)
library(caret)
train <- Stat_380_train
test <- Stat_380_test
head(train)
head(test)
#set.seed(1234)
#train <- train[sample(1:nrow(train)), ]
#head(train)
sub_train <- train %>% select(LotFrontage,LotArea,OverallQual,OverallCond,FullBath,HalfBath,TotRmsAbvGrd, YearBuilt, TotalBsmtSF, BedroomAbvGr, GrLivArea, PoolArea, YrSold, SalePrice)
sub_test<-test %>% select(LotFrontage,LotArea,OverallQual,OverallCond,FullBath,HalfBath,TotRmsAbvGrd, YearBuilt, TotalBsmtSF, BedroomAbvGr, GrLivArea, PoolArea, YrSold)
sub_test$SalePrice<-0
y.train<-sub_train$SalePrice
y.test<-sub_test$SalePrice
dummies <- dummyVars(SalePrice~ ., data = sub_train)
x.train<-predict(dummies, newdata = sub_train)
x.test<-predict(dummies, newdata = sub_test)
dtrain <- xgb.DMatrix(x.train,label=y.train,missing=NA)
dtest <- xgb.DMatrix(x.test,label=y.test,missing=NA)
param <- list(
booster             = "gblinear",
eval_metric         = "rmse"
)
XGBm<-xgb.cv( params=param,nfold=9,nrounds=150,missing=NA,data=dtrain,print_every_n=1)
library(tidyverse)
library(Metrics)
library(data.table)
library(xgboost)
library(caret)
train <- Stat_380_train
test <- Stat_380_test
head(train)
head(test)
#set.seed(1234)
#train <- train[sample(1:nrow(train)), ]
#head(train)
sub_train <- train %>% select(LotFrontage,LotArea,OverallQual,OverallCond,FullBath,HalfBath,TotRmsAbvGrd, YearBuilt, TotalBsmtSF, BedroomAbvGr, GrLivArea, PoolArea, YrSold, SalePrice)
sub_test<-test %>% select(LotFrontage,LotArea,OverallQual,OverallCond,FullBath,HalfBath,TotRmsAbvGrd, YearBuilt, TotalBsmtSF, BedroomAbvGr, GrLivArea, PoolArea, YrSold)
sub_test$SalePrice<-0
y.train<-sub_train$SalePrice
y.test<-sub_test$SalePrice
dummies <- dummyVars(SalePrice~ ., data = sub_train)
x.train<-predict(dummies, newdata = sub_train)
x.test<-predict(dummies, newdata = sub_test)
dtrain <- xgb.DMatrix(x.train,label=y.train,missing=NA)
dtest <- xgb.DMatrix(x.test,label=y.test,missing=NA)
param <- list(
booster             = "gblinear",
eval_metric         = "rmse"
)
XGBm<-xgb.cv( params=param,nfold=15,nrounds=150,missing=NA,data=dtrain,print_every_n=1)
library(tidyverse)
library(Metrics)
library(data.table)
library(xgboost)
library(caret)
train <- Stat_380_train
test <- Stat_380_test
head(train)
head(test)
#set.seed(1234)
#train <- train[sample(1:nrow(train)), ]
#head(train)
sub_train <- train %>% select(LotFrontage,LotArea,OverallQual,OverallCond,FullBath,HalfBath,TotRmsAbvGrd, YearBuilt, TotalBsmtSF, BedroomAbvGr, GrLivArea, PoolArea, YrSold, SalePrice)
sub_test<-test %>% select(LotFrontage,LotArea,OverallQual,OverallCond,FullBath,HalfBath,TotRmsAbvGrd, YearBuilt, TotalBsmtSF, BedroomAbvGr, GrLivArea, PoolArea, YrSold)
sub_test$SalePrice<-0
y.train<-sub_train$SalePrice
y.test<-sub_test$SalePrice
dummies <- dummyVars(SalePrice~ ., data = sub_train)
x.train<-predict(dummies, newdata = sub_train)
x.test<-predict(dummies, newdata = sub_test)
dtrain <- xgb.DMatrix(x.train,label=y.train,missing=NA)
dtest <- xgb.DMatrix(x.test,label=y.test,missing=NA)
param <- list(
booster             = "gblinear",
eval_metric         = "rmse"
)
XGBm<-xgb.cv( params=param,nfold=7,nrounds=150,missing=NA,data=dtrain,print_every_n=1)
library(tidyverse)
library(Metrics)
library(data.table)
library(xgboost)
library(caret)
train <- Stat_380_train
test <- Stat_380_test
head(train)
head(test)
#set.seed(1234)
#train <- train[sample(1:nrow(train)), ]
#head(train)
sub_train <- train %>% select(LotFrontage,LotArea,OverallQual,OverallCond,FullBath,HalfBath,TotRmsAbvGrd, YearBuilt, TotalBsmtSF, BedroomAbvGr, GrLivArea, PoolArea, YrSold, SalePrice)
sub_test<-test %>% select(LotFrontage,LotArea,OverallQual,OverallCond,FullBath,HalfBath,TotRmsAbvGrd, YearBuilt, TotalBsmtSF, BedroomAbvGr, GrLivArea, PoolArea, YrSold)
sub_test$SalePrice<-0
y.train<-sub_train$SalePrice
y.test<-sub_test$SalePrice
dummies <- dummyVars(SalePrice~ ., data = sub_train)
x.train<-predict(dummies, newdata = sub_train)
x.test<-predict(dummies, newdata = sub_test)
dtrain <- xgb.DMatrix(x.train,label=y.train,missing=NA)
dtest <- xgb.DMatrix(x.test,label=y.test,missing=NA)
param <- list(
booster             = "gblinear",
eval_metric         = "rmse"
)
XGBm<-xgb.cv( params=param,nfold=8,nrounds=150,missing=NA,data=dtrain,print_every_n=1)
library(tidyverse)
library(Metrics)
library(data.table)
library(xgboost)
library(caret)
train <- Stat_380_train
test <- Stat_380_test
head(train)
head(test)
#set.seed(1234)
#train <- train[sample(1:nrow(train)), ]
#head(train)
sub_train <- train %>% select(LotFrontage,LotArea,OverallQual,OverallCond,FullBath,HalfBath,TotRmsAbvGrd, YearBuilt, TotalBsmtSF, BedroomAbvGr, GrLivArea, PoolArea, YrSold, SalePrice)
sub_test<-test %>% select(LotFrontage,LotArea,OverallQual,OverallCond,FullBath,HalfBath,TotRmsAbvGrd, YearBuilt, TotalBsmtSF, BedroomAbvGr, GrLivArea, PoolArea, YrSold)
sub_test$SalePrice<-0
y.train<-sub_train$SalePrice
y.test<-sub_test$SalePrice
dummies <- dummyVars(SalePrice~ ., data = sub_train)
x.train<-predict(dummies, newdata = sub_train)
x.test<-predict(dummies, newdata = sub_test)
dtrain <- xgb.DMatrix(x.train,label=y.train,missing=NA)
dtest <- xgb.DMatrix(x.test,label=y.test,missing=NA)
param <- list(
booster             = "gblinear",
eval_metric         = "rmse"
)
XGBm<-xgb.cv( params=param,nfold=50,nrounds=150,missing=NA,data=dtrain,print_every_n=1)
library(tidyverse)
library(Metrics)
library(data.table)
library(xgboost)
library(caret)
train <- Stat_380_train
test <- Stat_380_test
head(train)
head(test)
#set.seed(1234)
#train <- train[sample(1:nrow(train)), ]
#head(train)
sub_train <- train %>% select(LotFrontage,LotArea,OverallQual,OverallCond,FullBath,HalfBath,TotRmsAbvGrd, YearBuilt, TotalBsmtSF, BedroomAbvGr, GrLivArea, PoolArea, YrSold, SalePrice)
sub_test<-test %>% select(LotFrontage,LotArea,OverallQual,OverallCond,FullBath,HalfBath,TotRmsAbvGrd, YearBuilt, TotalBsmtSF, BedroomAbvGr, GrLivArea, PoolArea, YrSold)
sub_test$SalePrice<-0
y.train<-sub_train$SalePrice
y.test<-sub_test$SalePrice
dummies <- dummyVars(SalePrice~ ., data = sub_train)
x.train<-predict(dummies, newdata = sub_train)
x.test<-predict(dummies, newdata = sub_test)
dtrain <- xgb.DMatrix(x.train,label=y.train,missing=NA)
dtest <- xgb.DMatrix(x.test,label=y.test,missing=NA)
param <- list(
booster             = "gblinear",
eval_metric         = "rmse"
)
XGBm<-xgb.cv( params=param,nfold=9,nrounds=250,missing=NA,data=dtrain,print_every_n=1)
library(tidyverse)
library(Metrics)
library(data.table)
library(xgboost)
library(caret)
train <- Stat_380_train
test <- Stat_380_test
head(train)
head(test)
#set.seed(1234)
#train <- train[sample(1:nrow(train)), ]
#head(train)
sub_train <- train %>% select(LotFrontage,LotArea,OverallQual,OverallCond,FullBath,HalfBath,TotRmsAbvGrd, YearBuilt, TotalBsmtSF, BedroomAbvGr, GrLivArea, PoolArea, YrSold, SalePrice)
sub_test<-test %>% select(LotFrontage,LotArea,OverallQual,OverallCond,FullBath,HalfBath,TotRmsAbvGrd, YearBuilt, TotalBsmtSF, BedroomAbvGr, GrLivArea, PoolArea, YrSold)
sub_test$SalePrice<-0
y.train<-sub_train$SalePrice
y.test<-sub_test$SalePrice
dummies <- dummyVars(SalePrice~ ., data = sub_train)
x.train<-predict(dummies, newdata = sub_train)
x.test<-predict(dummies, newdata = sub_test)
dtrain <- xgb.DMatrix(x.train,label=y.train,missing=NA)
dtest <- xgb.DMatrix(x.test,label=y.test,missing=NA)
library(tidyverse)
library(Metrics)
library(data.table)
library(xgboost)
library(caret)
train <- Stat_380_train
test <- Stat_380_test
head(train)
head(test)
#set.seed(1234)
#train <- train[sample(1:nrow(train)), ]
#head(train)
sub_train <- train %>% select(LotFrontage,LotArea,OverallQual,OverallCond,FullBath,HalfBath,TotRmsAbvGrd, YearBuilt, TotalBsmtSF, BedroomAbvGr, GrLivArea, PoolArea, YrSold, SalePrice)
sub_test<-test %>% select(LotFrontage,LotArea,OverallQual,OverallCond,FullBath,HalfBath,TotRmsAbvGrd, YearBuilt, TotalBsmtSF, BedroomAbvGr, GrLivArea, PoolArea, YrSold)
sub_test$SalePrice<-0
y.train<-sub_train$SalePrice
y.test<-sub_test$SalePrice
dummies <- dummyVars(SalePrice~ ., data = sub_train)
x.train<-predict(dummies, newdata = sub_train)
x.test<-predict(dummies, newdata = sub_test)
dtrain <- xgb.DMatrix(x.train,label=y.train,missing=NA)
dtest <- xgb.DMatrix(x.test,label=y.test,missing=NA)
param <- list(
booster             = "gblinear",
eval_metric         = "rmse"
)
XGBm<-xgb.cv( params=param,nfold=9,nrounds=500,missing=NA,data=dtrain,print_every_n=1)
watchlist <- list(eval = dtest, train = dtrain)
#now fit the full model
XGBm<-xgb.train( params=param,nrounds=500,missing=NA,data=dtrain,watchlist,early_stop_round=20,print_every_n=1)
pred<-predict(XGBm, newdata = dtest)
#example$SalePrice<-f
test1<- list(pred)
as.data.frame(test1, col.names = "SalePrice")
test1$Id< seq.int(nrow(test1))
fwrite(test1,'380AssignmentOne2.csv')
summary(pred)
